residuals_wbias_byname$region <- factor(residuals_wbias_byname$region,
levels=c("pre_crit_2",
"pre_crit_1",
"crit",
"spillover_1",
"spillover_2",
"spillover_3",
"spillover_4"))
residuals_wbias_byname$bias <- recode(residuals_wbias_byname$bias, "black" = "Evoking Criminality",
"white" = "Not Evoking Criminality")
##by trial
residuals_wbias_bytrial = subregion_df %>%
group_by(region, bias, nameCategory, trial_id) %>%
summarize(mean_resid = mean(residuals), CILow=ci.low(residuals), CIHigh=ci.high(residuals)) %>%
ungroup() %>%
mutate(YMin=mean_resid-CILow,YMax=mean_resid+CIHigh)
residuals_wbias_bytrial$region <- factor(residuals_wbias_bytrial$region)
residuals_wbias_bytrial$region <- factor(residuals_wbias_bytrial$region,
levels=c("pre_crit_2",
"pre_crit_1",
"crit",
"spillover_1",
"spillover_2",
"spillover_3",
"spillover_4"))
residuals_wbias_bytrial$bias <- recode(residuals_wbias_bytrial$bias, "black" = "black-typical",
"white" = "white-typical")
#obtaining per-trial reading time (and excluding data > 2.5 standard deviations away from the mean)
df <- df %>%
group_by(workerid, trial_no) %>%
mutate(trial_time = sum(rt))
trialTimeMean <- mean(df$trial_time)
trialTimeSD <- sd(df$trial_time)
slowTrial <- trialTimeMean + (2.5 * trialTimeSD)
fastTrial <- trialTimeMean - (2.5 * trialTimeSD)
df <- df %>%
filter(!(trial_time > slowTrial || trial_time < fastTrial))
#data transformations: log transform & word length
df$logrt = log(df$rt)
df$wordlen = nchar(as.character(df$form))
df$logtrial = log(df$trial_no + 1)
#regress word length and overall trial number onto log RT (ie, subtract out the variance contributed by these factors.)
resid_model = lmer(logrt ~ wordlen + (0+wordlen|workerid), data = df)
res = resid(resid_model)
df$residuals <- res
#items in the "critical" region
criticaldf <- filter(df, region == "crit", type == "critical")
criticaldf$bias <- factor(criticaldf$bias)
criticaldf$nameCategory <- factor(criticaldf$nameCategory)
criticaldf <- criticaldf %>%
mutate(consistency = case_when(bias == nameCategory ~ "consistent", TRUE ~ "inconsistent"))
criticaldf$ctr_nameCategory = as.numeric(criticaldf$nameCategory) - mean(as.numeric(criticaldf$nameCategory))
criticaldf$ctr_consistency = as.numeric(factor(criticaldf$consistency)) - mean(as.numeric(factor(criticaldf$consistency)))
criticaldf$ctr_crim = as.numeric(factor(criticaldf$bias)) - mean(as.numeric(factor(criticaldf$bias)))
#items in spillover regions 1 and 2
spilloverdf <- filter(df, region %in% c("spillover_1", "spillover_2"), type == "critical")
spilloverdf$bias <- factor(spilloverdf$bias)
spilloverdf$nameCategory <- factor(spilloverdf$nameCategory)
spilloverdf <- spilloverdf %>%
mutate(consistency = case_when(bias == nameCategory ~ "consistent", TRUE ~ "inconsistent"))
spilloverdf$ctr_nameCategory = as.numeric(spilloverdf$nameCategory) - mean(as.numeric(spilloverdf$nameCategory))
spilloverdf$ctr_consistency = as.numeric(factor(spilloverdf$consistency)) - mean(as.numeric(factor(spilloverdf$consistency)))
spilloverdf$ctr_crim = as.numeric(factor(spilloverdf$bias)) - mean(as.numeric(factor(spilloverdf$bias)))
spilloverdf$ctr_logtrial = as.numeric(spilloverdf$logtrial) - mean(as.numeric(spilloverdf$logtrial))
#items in just spillover_1
spillover1_df <- filter(df, region %in% c("spillover_1"), type == "critical")
spillover1_df$bias <- factor(spillover1_df$bias)
spillover1_df$nameCategory <- factor(spillover1_df$nameCategory)
spillover1_df <- spillover1_df %>%
mutate(consistency = case_when(bias == nameCategory ~ "consistent", TRUE ~ "inconsistent"))
spillover1_df$ctr_nameCategory = as.numeric(spillover1_df$nameCategory) - mean(as.numeric(spillover1_df$nameCategory))
spillover1_df$ctr_consistency = as.numeric(factor(spillover1_df$consistency)) - mean(as.numeric(factor(spillover1_df$consistency)))
spillover1_df$ctr_crim = as.numeric(factor(spillover1_df$bias)) - mean(as.numeric(factor(spillover1_df$bias)))
#items in just spillover_2
spillover2_df <- filter(df, region %in% c("spillover_2"), type == "critical")
spillover2_df$bias <- factor(spillover2_df$bias)
spillover2_df$nameCategory <- factor(spillover2_df$nameCategory)
spillover2_df <- spillover2_df %>%
mutate(consistency = case_when(bias == nameCategory ~ "consistent", TRUE ~ "inconsistent"))
spillover2_df$ctr_nameCategory = as.numeric(spillover2_df$nameCategory) - mean(as.numeric(spillover2_df$nameCategory))
spillover2_df$ctr_consistency = as.numeric(factor(spillover2_df$consistency)) - mean(as.numeric(factor(spillover2_df$consistency)))
spillover2_df$ctr_crim = as.numeric(factor(spillover2_df$bias)) - mean(as.numeric(factor(spillover2_df$bias)))
#items in just spillover_3
spillover3_df <- filter(df, region %in% c("spillover_3"), type == "critical")
spillover3_df$bias <- factor(spillover3_df$bias)
spillover3_df$nameCategory <- factor(spillover3_df$nameCategory)
spillover3_df <- spillover3_df %>%
mutate(consistency = case_when(bias == nameCategory ~ "consistent", TRUE ~ "inconsistent"))
spillover3_df$ctr_nameCategory = as.numeric(spillover3_df$nameCategory) - mean(as.numeric(spillover3_df$nameCategory))
spillover3_df$ctr_consistency = as.numeric(factor(spillover3_df$consistency)) - mean(as.numeric(factor(spillover3_df$consistency)))
spillover3_df$ctr_crim = as.numeric(factor(spillover3_df$bias)) - mean(as.numeric(factor(spillover3_df$bias)))
#Looking at how quickly the names themselves were read
name_region_df <- filter(df, region == "name", type == "critical")
name_region_df$bias <- factor(name_region_df$bias)
name_region_df$nameCategory <- factor(name_region_df$nameCategory)
name_region_df <- name_region_df %>%
mutate(consistency = case_when(bias == nameCategory ~ "consistent", TRUE ~ "inconsistent"))
name_region_df$ctr_nameCategory = as.numeric(name_region_df$nameCategory) -
mean(as.numeric(name_region_df$nameCategory))
name_region_df$ctr_consistency = as.numeric(factor(name_region_df$consistency)) -
mean(as.numeric(factor(name_region_df$consistency)))
name_RT_byBias = name_region_df %>%
group_by(region, bias, nameCategory) %>%
summarize(mean_resid = mean(residuals), CILow=ci.low(residuals), CIHigh=ci.high(residuals)) %>%
ungroup() %>%
mutate(YMin=mean_resid-CILow,YMax=mean_resid+CIHigh)
name_RT_byBias$bias <- recode(name_RT_byBias$bias, "black" = "black-typical",
"white" = "white-typical")
name_RT_byBias_raw = name_region_df %>%
group_by(region, bias, nameCategory) %>%
summarize(meanRT = mean(rt), CILow=ci.low(rt), CIHigh=ci.high(rt)) %>%
ungroup() %>%
mutate(YMin=meanRT-CILow,YMax=meanRT+CIHigh)
name_RT_byBias_raw$bias <- recode(name_RT_byBias_raw$bias, "black" = "black-typical",
"white" = "white-typical")
#consistency as a fixed effect
##critical item reading times
###preregistered model â€” not enough observations to converge the model
prereg_model = lmer(residuals ~ logtrial * ctr_nameCategory * ctr_consistency +
(1 + (logtrial * ctr_nameCategory * ctr_consistency) | trial_id) +
(1 + (logtrial * ctr_nameCategory * ctr_consistency) | workerid),
criticaldf, REML = F)
###simplified model
simpler_model = lmer(residuals ~ logtrial * ctr_nameCategory * ctr_consistency +
(1 | trial_id) +
(1 | workerid),
criticaldf, REML = F)
##spillover items reading times
###simpler model for regions 1 and 2
simple_spill_model = lmer(residuals ~ logtrial * ctr_nameCategory * ctr_consistency +
(1 | trial_id) +
(1 | workerid),
spilloverdf, REML = F)
###involving nameCategory and Consistency as random effects, still regions 1 and 2
spillover_model = lmer(residuals ~ logtrial * ctr_nameCategory * ctr_consistency +
(1 + (ctr_nameCategory * ctr_consistency) | trial_id) +
(1 + (ctr_nameCategory * ctr_consistency) | workerid),
spilloverdf, REML = F)
###involving nameCategory and Consistency as random effects, still regions 1 and 2
spillover_model = lmer(residuals ~ logtrial * ctr_nameCategory * ctr_consistency +
(1 + (ctr_nameCategory * ctr_consistency) | trial_id) +
(1 + (ctr_nameCategory * ctr_consistency) | workerid),
spilloverdf, REML = F)
###including a centered log-trial as a fixed effect, regions 1 and 2
spillover_model_logctr = lmer(residuals ~ ctr_logtrial * ctr_nameCategory * ctr_consistency +
(1 + (ctr_nameCategory * ctr_consistency) | trial_id) +
(1 + (ctr_nameCategory * ctr_consistency) | workerid),
spilloverdf, REML = F)
###focusing on spillover region 1
model_spillover1region = lmer(residuals ~ logtrial * ctr_nameCategory * ctr_consistency +
(1 + (ctr_nameCategory * ctr_consistency) | trial_id) +
(1 + (ctr_nameCategory * ctr_consistency) | workerid),
spillover1_df, REML = F)
###focusing on spillover region 2
model_spillover2region = lmer(residuals ~ logtrial * ctr_nameCategory * ctr_consistency +
(1 + (ctr_nameCategory * ctr_consistency) | trial_id) +
(1 + (ctr_nameCategory * ctr_consistency) | workerid),
spillover2_df, REML = F)
###focusing on spillover region 3
model_spillover3region = lmer(residuals ~ logtrial * ctr_nameCategory * ctr_consistency +
(1 + (ctr_nameCategory * ctr_consistency) | trial_id) +
(1 + (ctr_nameCategory * ctr_consistency) | workerid),
spillover3_df, REML = F)
#criminality as a fixed effect
##critical item reading times, simpler model
criminalityModel_crit <- lmer(residuals ~ logtrial * ctr_nameCategory * ctr_crim +
(1 | trial_id) +
(1 | workerid),
criticaldf, REML = F)
##critical item reading times, more robust model
criminalityModel_crit_robust <- lmer(residuals ~ logtrial * ctr_nameCategory * ctr_crim +
(1 + ctr_nameCategory | trial_id) +
(1 + (ctr_nameCategory * ctr_crim) | workerid),
criticaldf, REML = F)
##critical item reading times, more robust model
criminalityModel_crit_robust <- lmer(residuals ~ logtrial * ctr_nameCategory * ctr_crim +
(1 + ctr_nameCategory | trial_id) +
(1 + (ctr_nameCategory * ctr_crim) | workerid),
criticaldf, REML = F)
##spillover regions 1 and 2, simpler model
criminalityModel_spill <- lmer(residuals ~ logtrial * ctr_nameCategory * ctr_crim +
(1 | trial_id) +
(1 | workerid),
spilloverdf, REML = F)
##spillover regions 1 and 2, more robust model
criminalityModel_spill_robust <- lmer(residuals ~ logtrial * ctr_nameCategory * ctr_crim +
(1 + ctr_nameCategory | trial_id) +
(1 + (ctr_nameCategory * ctr_crim) | workerid),
spilloverdf, REML = F)
##spillover regions 1 and 2, simpler model
criminalityModel_spill <- lmer(residuals ~ logtrial * ctr_nameCategory * ctr_crim +
(1 | trial_id) +
(1 | workerid),
spilloverdf, REML = F)
##spillover regions 1 and 2, more robust model
criminalityModel_spill_robust <- lmer(residuals ~ logtrial * ctr_nameCategory * ctr_crim +
(1 + ctr_nameCategory | trial_id) +
(1 + (ctr_nameCategory * ctr_crim) | workerid),
spilloverdf, REML = F)
summary(prereg_model)
```{r echo = FALSE, eval=FALSE}
summary(prereg_model)
summary(simpler_model)
summary(simple_spill_model)
summary(spillover_model)
summary(spillover_model_logctr)
summary(model_spillover1region)
print("spillover 2:")
print("spillover 1:")
summary(model_spillover1region)
print("spillover 2:")
summary(model_spillover2region)
print("spillover 3:")
summary(model_spillover3region)
summary(criminalityModel_crit)
summary(criminalityModel_crit_robust)
summary(criminalityModel_spill)
summary(criminalityModel_spill_robust)
ggplot(residuals_wbias_byname, aes(x=region, y=mean_resid, color=nameCategory, group=nameCategory)) +
facet_wrap(~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
scale_colour_manual("Name Bias", values = c("#00397A","#CCCCCC")) +
labs(x = "Sentence Region", y = "Residualized/Centered RT (ms)", fill = "Type")  +
#scale_x_discrete(labels = c("White", "Black")) +
ggtitle("Mean Reading Times for Black- and White-typical Completions") +
theme(title = element_text(size=18), legend.text = element_text(size=15),
axis.text = element_text(angle = 30, size = 12),
strip.text = element_text(size=12))
ggplot(residuals_grouped2_byname, aes(x=region, y=mean_resid, color=consistency, group=consistency)) +
facet_wrap(~nameCategory) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
scale_colour_manual("Stereotype\nConsistency", values = c("#00397A","#CCCCCC")) +
labs(x = "Sentence Region", y = "Residualized/Centered RT (ms)", fill = "Type")  +
ggtitle("Mean Reading Times for Black- and White-typical Completions") +
theme(title = element_text(size=18), legend.text = element_text(size=15),
axis.text = element_text(angle = 30, size = 12),
strip.text = element_text(size=12))
ggplot(residuals_grouped2_bytrial, aes(x=region, y=mean_resid, color=consistency, group=consistency)) +
facet_grid(bias~trial_id) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
ggplot(filter(residuals_wbias_bytrial, bias == "white-typical"),
aes(x=region, y=mean_resid, color=nameCategory, group=nameCategory)) +
facet_wrap(trial_id~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
ggplot(filter(residuals_wbias_bytrial, bias == "black-typical"),
aes(x=region, y=mean_resid, color=nameCategory, group=nameCategory)) +
facet_wrap(trial_id~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
subregion_df <- subregion_df %>%
mutate(quarter = case_when((trial_no <= 4) ~ "firstQuarter",
(trial_no >= 13) ~ "lastQuarter",
TRUE ~ "middleHalf")) %>%
mutate(half = case_when((trial_no < 9) ~ "firstHalf",
(trial_no > 8) ~ "secondHalf",
TRUE ~ "other"))
#by quarter
residuals_orderEffects_Q = subregion_df %>%
group_by(region, bias, nameCategory, quarter) %>%
summarize(mean_resid = mean(residuals), CILow=ci.low(residuals), CIHigh=ci.high(residuals)) %>%
ungroup() %>%
mutate(YMin=mean_resid-CILow,YMax=mean_resid+CIHigh)
residuals_orderEffects_Q$region <- factor(residuals_orderEffects_Q$region)
residuals_orderEffects_Q$region <- factor(residuals_orderEffects_Q$region,
levels=regionLabels)
residuals_orderEffects_Q$bias <- recode(residuals_orderEffects_Q$bias, "black" = "black-typical",
"white" = "white-typical")
#by half
residuals_orderEffects_H = subregion_df %>%
group_by(region, bias, nameCategory, half) %>%
summarize(mean_resid = mean(residuals), CILow=ci.low(residuals), CIHigh=ci.high(residuals)) %>%
ungroup() %>%
mutate(YMin=mean_resid-CILow,YMax=mean_resid+CIHigh)
residuals_orderEffects_H$region <- factor(residuals_orderEffects_H$region)
residuals_orderEffects_H$region <- factor(residuals_orderEffects_H$region,
levels=regionLabels)
residuals_orderEffects_H$bias <- recode(residuals_orderEffects_H$bias, "black" = "black-typical",
"white" = "white-typical")
ggplot(filter(df, type == "critical"), aes(x=trial_no, y=rt, col=type)) +
geom_point(alpha=.2)  +
geom_smooth() +
#colscale +
labs(x='Item order (#RCs seen)', y='Raw RTs (ms)', fill='Type')
grouped = subregion_df %>%
group_by(trial_no, type) %>%
summarize(rt = mean(residuals))
ggplot(grouped, aes(x=trial_no, y=rt, col=type)) +
geom_point() +
geom_smooth(method="lm") +
#colscale +
labs(x='Item order (#sentences seen)', y='Length- and order-corrected log RTs (ms)', fill='Type')
ggplot(residuals_orderEffects_Q, aes(x=region, y=mean_resid, color=nameCategory,
group=nameCategory)) +
facet_grid(quarter~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
ggplot(residuals_orderEffects_Q, aes(x=region, y=mean_resid, color=quarter,
group=nameCategory)) +
facet_grid(nameCategory~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
ggplot(residuals_orderEffects_H, aes(x=region, y=mean_resid, color=nameCategory,
group=nameCategory)) +
facet_grid(half~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
ggplot(residuals_orderEffects_H, aes(x=region, y=mean_resid, color=half,
group=nameCategory)) +
facet_grid(nameCategory~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
subinfo <- subinfo %>%
filter(!(workerid %in% excludeList))# %>%
#mutate(age = as.numeric(subinfo$age)) %>%
#mutate(affiliation = as.numeric(subinfo$affiliation))
#political affiliation
subinfo <- subinfo %>%
mutate(affiliationGroup = case_when((affiliation > -1) & (affiliation < 3) ~ "liberal",
(affiliation == 3) ~ "independent",
(affiliation > 3) ~ "conservative",
TRUE ~ "no response"))
liberalIDs <- filter(subinfo, affiliationGroup == "liberal")$workerid
independentIDs <- filter(subinfo, affiliationGroup == "independent")$workerid
conservativeIDs <- filter(subinfo, affiliationGroup == "conservative")$workerid
noAffIDs <- filter(subinfo, affiliationGroup == "no response")$workerid
demographics_df <- subregion_df %>%
mutate(affiliationGroup = case_when((workerid %in% liberalIDs) ~ "liberal",
(workerid %in% independentIDs) ~ "independent",
(workerid %in% conservativeIDs) ~ "conservative",
(workerid %in% noAffIDs) ~ "no response",
TRUE ~ "other"))
residuals_affiliation = demographics_df %>%
group_by(region, bias, nameCategory, affiliationGroup) %>%
summarize(mean_resid = mean(residuals), CILow=ci.low(residuals), CIHigh=ci.high(residuals)) %>%
ungroup() %>%
mutate(YMin=mean_resid-CILow,YMax=mean_resid+CIHigh)
residuals_affiliation$region <- factor(residuals_affiliation$region)
residuals_affiliation$region <- factor(residuals_affiliation$region,
levels=regionLabels)
residuals_affiliation$bias <- recode(residuals_affiliation$bias, "black" = "black-typical",
"white" = "white-typical")
#racial demographics
subinfo <- subinfo %>%
mutate(raceGroup = case_when(((race == "AA") | (race == "AA, White") | (race == "AA, Latino")
| (race == "Asian, AA, White") | (race == "AA, Latino, White"))
~ "AA",
((race == "Latino") | (race == "Latino, White")) ~ "Latinx",
((race == "Asian") | (race == "Asian, White")) ~ "Asian",
(race == "White") ~ "White",
TRUE ~ "not reported"))
AA_ids <- filter(subinfo, raceGroup == "AA")$workerid
Latinx_ids <- filter(subinfo, raceGroup == "Latinx")$workerid
Asian_ids <- filter(subinfo, raceGroup == "Asian")$workerid
White_ids <- filter(subinfo, raceGroup == "White")$workerid
demographics_df <- demographics_df %>%
mutate(raceGroup = case_when((workerid %in% AA_ids) ~ "AA",
(workerid %in% Latinx_ids) ~ "Latinx",
(workerid %in% Asian_ids) ~ "Asian",
(workerid %in% White_ids) ~ "White",
TRUE ~ "not reported"))
residuals_race = demographics_df %>%
group_by(region, bias, nameCategory, raceGroup) %>%
summarize(mean_resid = mean(residuals), CILow=ci.low(residuals), CIHigh=ci.high(residuals)) %>%
ungroup() %>%
mutate(YMin=mean_resid-CILow,YMax=mean_resid+CIHigh)
residuals_race$region <- factor(residuals_race$region)
residuals_race$region <- factor(residuals_race$region,
levels=regionLabels)
residuals_race$bias <- recode(residuals_race$bias, "black" = "black-typical",
"white" = "white-typical")
#Age demographic
library(Hmisc) #for the cut2() function
library(dplyr) #for the cut2() function
averageAge <- mean(subinfo$age, na.rm = TRUE)
subinfo$ageGroup2 <- as.numeric(cut2(as.numeric(subinfo$age), g=3))
subinfo <- subinfo %>%
mutate(ageGroup = case_when((ageGroup2 == 1) ~ "younger third",
(ageGroup2 == 2) ~ "middle third",
(ageGroup2 == 3) ~ "older third",
TRUE ~ "other"))
olderAgeIDs <- filter(subinfo, ageGroup == "older third")$workerid
middleAgeIDs <- filter(subinfo, ageGroup == "middle third")$workerid
youngerAgeIDs <- filter(subinfo, ageGroup == "younger third")$workerid
demographics_df <- demographics_df %>%
mutate(ageGroup = case_when((workerid %in% olderAgeIDs) ~ "older third",
(workerid %in% middleAgeIDs) ~ "middle third",
(workerid %in% youngerAgeIDs) ~ "younger third",
TRUE ~ "other"))
residuals_age = demographics_df %>%
group_by(region, bias, nameCategory, ageGroup) %>%
summarise(mean_resid = mean(residuals), CILow=ci.low(residuals), CIHigh=ci.high(residuals)) %>%
ungroup() %>%
mutate(YMin=mean_resid-CILow,YMax=mean_resid+CIHigh)
residuals_age$region <- factor(residuals_age$region)
residuals_age$region <- factor(residuals_age$region,
levels=regionLabels)
residuals_age$bias <- recode(residuals_age$bias, "black" = "black-typical",
"white" = "white-typical")
#detaching packages that could conflict with others in the script
detach("package:dplyr", unload = TRUE)
detach("package:Hmisc", unload = TRUE)
ggplot(residuals_affiliation, aes(x=region, y=mean_resid, color=nameCategory,
group=nameCategory)) +
facet_grid(affiliationGroup~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
ggplot(residuals_race, aes(x=region, y=mean_resid, color=nameCategory,
group=nameCategory)) +
facet_grid(raceGroup~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
ggplot(dplyr::filter(residuals_race, raceGroup == "White"), aes(x=region, y=mean_resid, color=nameCategory,
group=nameCategory)) +
facet_grid(~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
ggplot(residuals_age, aes(x=region, y=mean_resid, color=nameCategory,
group=nameCategory)) +
facet_grid(ageGroup~bias) +
geom_point()  +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25) +
geom_line() +
labs(x='Sentence region', y='Residualized/Centered RT (ms)', fill='Type') +
theme(axis.text.x = element_text(angle = 30))
#import packages
library(tidyverse)
library(lme4)
library(lmerTest)
library(ggplot2)
library(bootstrap)
library(tm)
install.packages("dplyr")
#set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#helper scripts
dodge = position_dodge(.9)
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
#read in experiment data
df <- read_csv("../data/pictureRT/pictureRT-trials.csv") %>%
# remove bot check slides
filter(!(type == "bot_check")) %>%
# remove the practice trial
filter(!(type == "practice")) %>%
# remove non-relevant cols
select( -c(audio, response, slide_number, slide_type, error)) %>%
drop_na()
install.packages("dplyr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
#create trial summary df
by_trial <- df %>%
group_by(workerid, trial_id, response_correct, nameCategory, bias, type) %>%
summarise_each(list())
knitr::opts_chunk$set(error = TRUE)
#create trial summary df
by_trial <- df %>%
group_by(workerid, trial_id, response_correct, nameCategory, bias, type) %>%
summarise_each(list())
#create trial summary df
by_trial <- df %>%
group_by(workerid, trial_id, response_correct, nameCategory, bias, type) %>%
summarise_each(list())
#import packages
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
#import packages
library(tidyverse)
#import packages
library(tidyverse)
